<!DOCTYPE html>
<html lang="pt-BR">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>MY NOTE - Intermediário</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary-color: #6C5CE7;
      --light-color: #F5F6FA;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background-color: #f5f5f5;
    }

    .app-container {
      display: flex;
      height: 100vh;
    }

    .sidebar {
      width: 300px;
      background: white;
      border-right: 1px solid #ddd;
      display: flex;
      flex-direction: column;
    }

    .sidebar-header {
      padding: 20px;
      background: var(--primary-color);
      color: white;
    }

    .new-note-btn {
      margin: 15px;
      padding: 10px;
      background: var(--primary-color);
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .note-list {
      overflow-y: auto;
      flex-grow: 1;
    }

    .note-item {
      padding: 15px;
      border-bottom: 1px solid #eee;
      cursor: pointer;
    }

    .note-item:hover {
      background: #f9f9f9;
    }

    .note-item.active {
      background: var(--light-color);
      border-left: 3px solid var(--primary-color);
    }

    .editor {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }

    .editor-header {
      padding: 15px;
      background: white;
      border-bottom: 1px solid #ddd;
    }

    #note-title {
      width: 100%;
      font-size: 20px;
      border: none;
      outline: none;
    }

    #note-content {
      flex-grow: 1;
      padding: 15px;
      border: none;
      resize: none;
      outline: none;
      font-size: 16px;
    }

    .status-bar {
      padding: 10px 15px;
      background: white;
      border-top: 1px solid #ddd;
      display: flex;
      justify-content: space-between;
      color: #777;
    }

    @media (max-width: 768px) {
      .app-container {
        flex-direction: column;
      }

      .sidebar {
        width: 100%;
        height: 200px;
      }
    }
  </style>
</head>

<body>
  <div class="app-container">
    <div class="sidebar">
      <div class="sidebar-header">
        <h1>MY NOTE v2.0</h1>
      </div>

      <button class="new-note-btn">
        <i class="fas fa-plus"></i> Nova Nota
      </button>

      <div class="note-list" id="note-list">
        <!-- Notas serão carregadas aqui -->
      </div>
    </div>

    <div class="editor">
      <div class="editor-header">
        <input type="text" id="note-title" placeholder="Título da nota">
      </div>

      <textarea id="note-content" placeholder="Comece a escrever..."></textarea>

      <div class="status-bar">
        <span id="char-count">0 caracteres</span>
        <span id="last-saved">Não salvo</span>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let notes = JSON.parse(localStorage.getItem('notes')) || [];
      let currentNoteId = null;

      function saveNotes() {
        localStorage.setItem('notes', JSON.stringify(notes));
        updateLastSaved();
      }

      function renderNotes() {
        const noteList = document.getElementById('note-list');
        noteList.innerHTML = '';
        if (notes.length === 0) {
          noteList.innerHTML = '<div class="note-item">Nenhuma nota criada</div>';
          return;
        }
        notes.forEach(note => {
          const noteElement = document.createElement('div');
          noteElement.className = 'note-item';
          if (note.id === currentNoteId) noteElement.classList.add('active');
          noteElement.innerHTML = `
            <div class="note-title">${note.title || 'Sem título'}</div>
            <div class="note-preview">${note.content.substring(0, 50)}...</div>
          `;
          noteElement.addEventListener('click', () => {
            loadNote(note.id);
          });
          noteList.appendChild(noteElement);
        });
      }

      function loadNote(id) {
        const note = notes.find(n => n.id === id);
        if (!note) return;
        currentNoteId = id;
        document.getElementById('note-title').value = note.title;
        document.getElementById('note-content').value = note.content;
        updateCharCount();
        renderNotes();
      }

      function updateCharCount() {
        const content = document.getElementById('note-content').value;
        document.getElementById('char-count').textContent = `${content.length} caracteres`;
      }

      function updateLastSaved() {
        document.getElementById('last-saved').textContent = `Salvo: ${new Date().toLocaleTimeString()}`;
      }
      document.querySelector('.new-note-btn').addEventListener('click', function() {
        const newNote = {
          id: Date.now(),
          title: 'Nova Nota',
          content: '',
          createdAt: new Date()
        };
        notes.unshift(newNote);
        saveNotes();
        loadNote(newNote.id);
        renderNotes();
      });
      document.getElementById('note-title').addEventListener('input', function() {
        if (currentNoteId) {
          const note = notes.find(n => n.id === currentNoteId);
          if (note) note.title = this.value;
          saveNotes();
          renderNotes();
        }
      });
      document.getElementById('note-content').addEventListener('input', function() {
        if (currentNoteId) {
          const note = notes.find(n => n.id === currentNoteId);
          if (note) note.content = this.value;
          saveNotes();
          updateCharCount();
        }
      });
      // Carregar a primeira nota se existir
      if (notes.length > 0) {
        loadNote(notes[0].id);
      }
      renderNotes();
    });
  </script>
</body>

</html>
